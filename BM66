import java.util.*;


public class Solution {
    /**
     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
     *
     * longest common substring
     * @param str1 string字符串 the string
     * @param str2 string字符串 the string
     * @return string字符串
     */
    public String LCS (String str1, String str2) {       
        int[][] dp = new int[str1.length() + 1][str2.length() + 1];//dp[i][j]表示到str1第i个个到str2第j个为止的公共子串长度
        int max = 0;
        int pos = 0;
        for(int i = 1; i <= str1.length(); i++){
            for(int j = 1; j <= str2.length(); j++){                
                if(str1.charAt(i - 1) == str2.charAt(j - 1))//如果该两位相同                    
                    dp[i][j] = dp[i - 1][j - 1] + 1;//则增加长度
                else                    
                    dp[i][j] = 0;//该位置为0                
                if(dp[i][j] > max){
                    max = dp[i][j];
                    pos = i - 1;//更新最大长度
                }
            }
        }
        return str1.substring(pos - max + 1, pos + 1);
    }
}
