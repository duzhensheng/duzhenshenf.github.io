import java.util.*;

/*
 * public class TreeNode {
 *   int val = 0;
 *   TreeNode left = null;
 *   TreeNode right = null;
 *   public TreeNode(int val) {
 *     this.val = val;
 *   }
 * }
 */

public class Solution {
    /**
     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
     *
     * 
     * @param root TreeNode类 
     * @return bool布尔型
     */
    private int min = Integer.MIN_VALUE;
    public boolean isValidBST (TreeNode root) {
        if (root == null) return true;
        if (!isValidBST(root.left)) {//二叉搜索树左子树上的所有节点不小于当前节点
            return false;
        }
        if (min >= root.val) {//min就是当前为根节点的树中的最大值
            return false;
        } else {
            min = root.val;
        }
        if (!isValidBST(root.right)) {
            return false;
        }
        return true;
    }
}
